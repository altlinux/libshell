#!/bin/ash -efu

if [ -z "${__included_shell_sort-}" ]; then
__included_shell_sort=1

if [ -n "${__libshell_experimental-}" ]; then

. ./shell-array

QUICKSORT='__shell_quicksort'
__shell_quicksort() {
	local res=0
	[ "$2" -"$1" "$3" ] || res=1
	return $res
}

__shell_quicksort_partition() {
	local arr_x arr_y i=$p j=$p var="$1"
	array_get "$arr" "$r" arr_x

	while [ "$j" -lt "$r" ]; do
		array_get "$arr" "$j" arr_y
		if $QUICKSORT "$order" "$arr_y" "$arr_x"; then
			array_flip "$arr" "$j" "$i"
			i=$(($i+1))
		fi
		j=$(($j+1))
	done
	array_flip "$arr" "$i" "$r"
	eval "$var=\"$i\""
}

__quicksort() {
	local q arr="$1" p="$2" r="$3"
	while [ "$p" -lt "$r" ]; do
		__shell_quicksort_partition q
		__quicksort "$arr" "$p" "$(($q-1))"
		p=$(($q+1))
	done
}

# Usage: quicksort ARR [order]
quicksort() {
	local order=le arr r
	arr="$1"; shift
	[ "$#" -eq 0 ] || order=ge

	array_size "$arr" r
	__quicksort "$arr" 0 "$(($r-1))"
}

fi #__libshell_experimental

fi #__included_shell_quicksort
